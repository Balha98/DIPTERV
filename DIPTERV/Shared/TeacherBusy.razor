@using DIPTERV.Data;
@using DIPTERV.Services;

@inject FreeBlockService freeBlockService;

@if (freeTimeBlockIDs == null)
{
    <p><em>Loading...</em></p>
}

else
{

<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>@teacher.Name</h2>
        </div>
        <table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Hétfő</th>
                <th>Kedd</th>
                <th>Szerda</th>
                <th>Csütörtök</th>
                <th>Péntek</th>
            </tr>
        </thead>
        <tbody>
            @for (var row = 0;row < 5; row++)
            {
                <tr>
                    <td>@(row+1)</td>
                    @for (var col = 0; col < 5; col++)
                    {
                            @if (freeTimeBlockIDs.Contains((col * 5) + row))
                            {
                            <td>SZABAD </td>
                             } 
                            else 
                            {
                            <td>FOGLALT </td>
                            }
                    }
                </tr>
            }
        </tbody>
        </table>

        <div class="dialog-buttons">
            <button class="btn btn-secondary mr-auto">Cancel</button>

            <button class="btn btn-success ml-auto">Order ></button>
        </div>
    </div>
</div>

}

@code {
    [Parameter] public Teacher teacher { get; set; }
    int[] freeTimeBlockIDs;

    protected override async Task OnInitializedAsync()
    {
        freeTimeBlockIDs = await freeBlockService.GetFreeTimeBlockIDsByTeacherIDAsync(teacher.ID);
    }
}