@page "/teachers"
@using DIPTERV.Context;
@using DIPTERV.Data
@using DIPTERV.Services;
@using Microsoft.EntityFrameworkCore

@inject TeacherService teacherService

<PageTitle>Teachers</PageTitle>


@if (teachers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <RadzenDataGrid Data="@teachers" TItem="Teacher" AllowColumnResize="true" AllowSorting="true">
        <Columns>
            <RadzenDataGridColumn TItem="Teacher" Property="ID" Title="Azonosító" Width="160px" TextAlign="TextAlign.Center" />
            <RadzenDataGridColumn TItem="Teacher" Property="Name" Title="Név" />
            <RadzenDataGridColumn TItem="Teacher" Property="CourseNumber" Title="Heti óraszám" Width="160px" />
            <RadzenDataGridColumn TItem="Teacher" Title="Elérhetőség">
                <Template Context="teacher">
                <RadzenButton Icon="event_busy" ButtonStyle="Radzen.ButtonStyle.Success" Variant="Radzen.Variant.Filled" Size="Radzen.ButtonSize.Large" Click="@(() => ButtonClick(teacher))" IsBusy="false" Visible="true" Shade="Radzen.Shade.Default"/>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}

@if (showingBusyDialog)
{
    <TeacherBusy 
        teacher="actTeacher"
        OnOK="OnOK" />
}

@code {
    private Teacher[]? teachers;
    bool showingBusyDialog;
    Teacher actTeacher;

    protected override async Task OnInitializedAsync()
    {
        teachers = await teacherService.GetAllTeachersAsync();
        
    }

    protected void ButtonClick(Teacher teacher)
    {
        actTeacher = teacher;
        showingBusyDialog= true;
    }

    public void OnOK()
    {
        showingBusyDialog = false;
    }
}
