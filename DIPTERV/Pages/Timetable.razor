@page "/timetable"
@using DIPTERV.Context;
@using DIPTERV.Data
@using DIPTERV.Services;
@using Microsoft.EntityFrameworkCore

@inject TeacherService teacherService
@inject RoomService roomService
@inject SchoolClassService schoolClassService

<PageTitle>Timetable</PageTitle>
<RadzenTabs @bind-SelectedIndex=@selectedIndex>
    <Tabs>
        <RadzenTabsItem Text="Tanár" Icon="person">
                <p>
                <RadzenDropDown AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value=@value Data=@teachers TextProperty="Name" ValueProperty="ID" Placeholder="Válassz ki egy tanárt!"  ></RadzenDropDown>
                 </p>
            @if (value == -1)
            { }
            else
            {
                <div @key="value">
                <CourseCardTeacher teacherId="value">  </CourseCardTeacher>
                </div>

             }
                 </RadzenTabsItem>
        <RadzenTabsItem Text="Osztály" Icon="groups">
            <p>
                <RadzenDropDown AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value=@value2 Data=@schoolClasses TextProperty="Name" ValueProperty="ID" Placeholder="Válassz ki egy osztályt!"></RadzenDropDown>
            </p>
            @if (value2 == -1)
            { }
            else
            {
                <div @key="value2">
                    <CourseCardSchoolClass schoolClassId="value2">  </CourseCardSchoolClass>
                </div>

            }
        </RadzenTabsItem>
        <RadzenTabsItem Text="Tanterem" Icon="meeting_room">
            <p>
                <RadzenDropDown AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" @bind-Value=@value3 Data=@rooms TextProperty="Name" ValueProperty="ID" Placeholder="Válassz ki egy tantermet!"></RadzenDropDown>
            </p>
            @if (value3 == -1)
            { }
            else
            {
                <div @key="value3">
                    <CourseCardRoom roomId="value3">  </CourseCardRoom>
                </div>

            }
        </RadzenTabsItem>
    </Tabs>
</RadzenTabs>

@code{
    int selectedIndex = 0;
    Teacher[] teachers;
    SchoolClass[] schoolClasses;
    Room[] rooms;

    int value = -1;
    int value2 = -1;
    int value3 = -1;

    protected override async Task OnInitializedAsync()
    {
        teachers = await teacherService.GetAllTeachersAsync();
        schoolClasses = await schoolClassService.GetAllSchoolClassesAsync();
        rooms = await roomService.GetAllRoomsAsync();
    }

}
